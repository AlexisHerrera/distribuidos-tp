name: tp-escalabilidad

services:
  rabbitmq:
    container_name: rabbitmq
    build:
      context: .
      dockerfile: rabbitmq/Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - testing_net


  client:
    container_name: client
    build:
      context: .
      dockerfile: src/client/Dockerfile
    command:
      [
        "python",
        "src/client/main.py",
        ".data/movies_metadata.csv",
        ".data/ratings.csv",
        ".data/credits.csv",
      ]
    image: client:latest
    environment:
      - SERVER_HOST=cleaner
      - SERVER_PORT=12345
      - BATCH_SIZE=20
    networks:
      - testing_net
    volumes:
      - ./.data:/app/.data
    depends_on:
      cleaner:
        condition: service_started

  cleaner:
    container_name: cleaner
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/cleaner/main.py"]
    environment:
      - SERVER_PORT=12345
      - LISTENING_BACKLOG=3
      - BATCH_SIZE_MOVIES=20
      - BATCH_SIZE_RATINGS=100
      - BATCH_SIZE_CREDITS=20
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/cleaner/config.yaml:/app/config.yaml

  filter_single_country-1:
    container_name: filter_single_country-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "solo_country"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/single_country_config.yaml:/app/config.yaml
  filter_single_country-2:
    container_name: filter_single_country-2
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "solo_country"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/single_country_config.yaml:/app/config.yaml
  country_budget_counter-1:
    container_name: country_budget_counter-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/counters/main.py", "country_budget"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/counters/config.yaml:/app/config.yaml
  country_budget_counter-2:
    container_name: country_budget_counter-2
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/counters/main.py", "country_budget"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/counters/config.yaml:/app/config.yaml
  filter_post_2000-1:
    container_name: filter_post_2000-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "post_2000"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/post_2000_config.yaml:/app/config.yaml
  filter_argentina-1:
    container_name: filter_argentina-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "argentina"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/argentina_config.yaml:/app/config.yaml
  filter_argentina_and_spain-1:
    container_name: filter_argentina_and_spain-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "argentina_and_spain"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/argentina_and_spain_config.yaml:/app/config.yaml
  filter_decade_00-1:
    container_name: filter_decade_00-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "decade_00"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/decade_00_config.yaml:/app/config.yaml

  q2_sink:
    container_name: q2_sink
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/sinks/main.py"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/sinks/config.yaml:/app/config.yaml

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
