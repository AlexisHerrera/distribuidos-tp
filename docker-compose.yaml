name: tp-escalabilidad

services:
  rabbitmq:
    container_name: rabbitmq
    build:
      context: .
      dockerfile: rabbitmq/Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - testing_net

  
  client-1:
    container_name: client-1
    build:
      context: .
      dockerfile: src/client/Dockerfile
    command:
      [
        "python",
        "src/client/main.py",
        ".data/movies_metadata.csv",
        ".data/ratings.csv",
        ".data/credits.csv",
      ]
    environment:
      - SERVER_HOST=cleaner
      - SERVER_PORT=12345
      - BATCH_SIZE=20
    networks:
      - testing_net
    volumes:
      - ./.data:/app/.data
      - ./.results:/app/.results
    depends_on:
      cleaner:
        condition: service_started

  client-2:
    container_name: client-2
    build:
      context: .
      dockerfile: src/client/Dockerfile
    command:
      [
        "python",
        "src/client/main.py",
        ".data/movies_metadata.csv",
        ".data/ratings.csv",
        ".data/credits.csv",
      ]
    environment:
      - SERVER_HOST=cleaner
      - SERVER_PORT=12345
      - BATCH_SIZE=20
    networks:
      - testing_net
    volumes:
      - ./.data:/app/.data
      - ./.results:/app/.results
    depends_on:
      cleaner:
        condition: service_started

  cleaner:
    container_name: cleaner
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/cleaner/main.py"]
    environment:
      - SERVER_PORT=12345
      - LISTENING_BACKLOG=3
      - BATCH_SIZE_MOVIES=20
      - BATCH_SIZE_RATINGS=100
      - BATCH_SIZE_CREDITS=20
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/cleaner/config.yaml:/app/config.yaml

  filter_single_country-1:
    container_name: filter_single_country-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "solo_country"]
    environment:
      - NODE_ID=filter_single_country-1
      - PORT=6000
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/single_country_config.yaml:/app/config.yaml
      - ./.state/filter_single_country-1:/app/state
  country_budget_counter-1:
    container_name: country_budget_counter-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/counters/main.py", "country_budget"]
    environment:
      - NODE_ID=country_budget_counter-1
      - PORT=6001
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/counters/country_budget_config.yaml:/app/config.yaml
      - ./.state/country_budget_counter-1:/app/state
  filter_budget_revenue-1:
    container_name: filter_budget_revenue-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "budget_revenue"]
    environment:
      - NODE_ID=filter_budget_revenue-1
      - PORT=6002
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/budget_revenue_config.yaml:/app/config.yaml
      - ./.state/filter_budget_revenue-1:/app/state
  sentiment_analyzer-1:
    container_name: sentiment_analyzer-1
    build:
      context: .
      dockerfile: src/server/sentiment_analyzer/Dockerfile
    command: ["python", "src/server/sentiment_analyzer/main.py", "sentiment"]
    environment:
      - NODE_ID=sentiment_analyzer-1
      - PORT=6003
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/sentiment_analyzer/config.yaml:/app/config.yaml
      - ./.state/sentiment_analyzer-1:/app/state
  filter_post_2000-1:
    container_name: filter_post_2000-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "post_2000"]
    environment:
      - NODE_ID=filter_post_2000-1
      - PORT=6004
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/post_2000_config.yaml:/app/config.yaml
      - ./.state/filter_post_2000-1:/app/state
  filter_argentina-1:
    container_name: filter_argentina-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "argentina"]
    environment:
      - NODE_ID=filter_argentina-1
      - PORT=6005
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/argentina_config.yaml:/app/config.yaml
      - ./.state/filter_argentina-1:/app/state
  filter_argentina_and_spain-1:
    container_name: filter_argentina_and_spain-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "argentina_and_spain"]
    environment:
      - NODE_ID=filter_argentina_and_spain-1
      - PORT=6006
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/argentina_and_spain_config.yaml:/app/config.yaml
      - ./.state/filter_argentina_and_spain-1:/app/state
  filter_decade_00-1:
    container_name: filter_decade_00-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/filters/main.py", "decade_00"]
    environment:
      - NODE_ID=filter_decade_00-1
      - PORT=6007
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/filters/decade_00_config.yaml:/app/config.yaml
      - ./.state/filter_decade_00-1:/app/state
  rating_counter-1:
    container_name: rating_counter-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/counters/main.py", "rating"]
    environment:
      - NODE_ID=rating_counter-1
      - PORT=6008
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/counters/rating_counter_config.yaml:/app/config.yaml
      - ./.state/rating_counter-1:/app/state
  cast_splitter-1:
    container_name: cast_splitter-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/splitters/main.py", "cast_splitter"]
    environment:
      - NODE_ID=cast_splitter-1
      - PORT=6009
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/splitters/config.yaml:/app/config.yaml
      - ./.state/cast_splitter-1:/app/state
  actor_counter-1:
    container_name: actor_counter-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/counters/main.py", "actor_counter"]
    environment:
      - NODE_ID=actor_counter-1
      - PORT=6010
      - PEERS=
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/counters/actor_counter_config.yaml:/app/config.yaml
      - ./.state/actor_counter-1:/app/state
  
  
  q1_sink:
    container_name: q1_sink
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/sinks/main.py", "q1"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/sinks/q1_config.yaml:/app/config.yaml
      - ./.state/q1_sink:/app/state

  q2_sink:
    container_name: q2_sink
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/sinks/main.py", "q2"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/sinks/q2_config.yaml:/app/config.yaml
      - ./.state/q2_sink:/app/state

  q3_sink:
    container_name: q3_sink
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/sinks/main.py", "q3"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/sinks/q3_config.yaml:/app/config.yaml
      - ./.state/q3_sink:/app/state

  q4_sink:
    container_name: q4_sink
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/sinks/main.py", "q4"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/sinks/q4_config.yaml:/app/config.yaml
      - ./.state/q4_sink:/app/state

  q5_sink:
    container_name: q5_sink
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/sinks/main.py", "q5"]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/sinks/q5_config.yaml:/app/config.yaml
      - ./.state/q5_sink:/app/state

  
  ratings_joiner:
    container_name: ratings_joiner
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/joiners/main.py", ratings_joiner]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/joiners/ratings_joiner_config.yaml:/app/config.yaml
    
  cast_joiner:
    container_name: cast_joiner
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "src/server/joiners/main.py", cast_joiner]
    networks:
      - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/joiners/cast_joiner_config.yaml:/app/config.yaml
    
  watcher-1:
    container_name: watcher-1
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "./src/server/watcher/main.py"]
    networks:
      - testing_net
    environment:
      - NODE_ID=1
      - PEERS=2:watcher-2,3:watcher-3
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/watcher/config.yaml:/app/config.yaml:ro
      - ./running_nodes:/app/running_nodes:ro
      - /var/run/docker.sock:/var/run/docker.sock
  watcher-2:
    container_name: watcher-2
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "./src/server/watcher/main.py"]
    networks:
      - testing_net
    environment:
      - NODE_ID=2
      - PEERS=1:watcher-1,3:watcher-3
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/watcher/config.yaml:/app/config.yaml:ro
      - ./running_nodes:/app/running_nodes:ro
      - /var/run/docker.sock:/var/run/docker.sock
  watcher-3:
    container_name: watcher-3
    build:
      context: .
      dockerfile: src/server/Dockerfile
    command: ["python", "./src/server/watcher/main.py"]
    networks:
      - testing_net
    environment:
      - NODE_ID=3
      - PEERS=1:watcher-1,2:watcher-2
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src/server/watcher/config.yaml:/app/config.yaml:ro
      - ./running_nodes:/app/running_nodes:ro
      - /var/run/docker.sock:/var/run/docker.sock
  
networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
    